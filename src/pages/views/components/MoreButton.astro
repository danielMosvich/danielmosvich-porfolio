---
interface Props {
  title: string;
  description?: string;
  src?: string;
  href: string;
  play?: boolean;
}
const { title, description, src, href = "/", play = false } = Astro.props;
---

<a
  href={href}
  target="_blank"
  class="container flex w-full items-center gap-3 cursor-pointer hover:bg-white bg-white/40 rounded-lg p-2 border border-zinc-300 relative"
>
  {src ? <img class="w-10 h-10 rounded-lg" src={src} alt={title} /> : <slot />}
  <div class="flex flex-col justify-center gap-1 overflow-hidden">
    <h3
      class="w-full font-semibold text-black/80 whitespace-nowrap text-ellipsis overflow-x-clip text-sm leading-none"
    >
      {title}
    </h3>
    <h5
      class="text-black/60 font-[500] text-sm leading-none whitespace-nowrap text-ellipsis"
    >
      {description}
    </h5>
  </div>
  {
    play && (
      <div class="text-black/50 hidden sm:flex  absolute right-4 p-1 rounded-lg border border-zinc-300 svg transition-colors">
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="1.5rem"
          height="1.5rem"
          viewBox="0 0 512 512"
        >
          <path
            fill="currentColor"
            d="M133 440a35.37 35.37 0 0 1-17.5-4.67c-12-6.8-19.46-20-19.46-34.33V111c0-14.37 7.46-27.53 19.46-34.33a35.13 35.13 0 0 1 35.77.45l247.85 148.36a36 36 0 0 1 0 61l-247.89 148.4A35.5 35.5 0 0 1 133 440"
          />
        </svg>
      </div>
    )
  }

  <style>
    .container {
      box-shadow: inset 0 0 0 2px white;
    }
    .container:hover .svg {
      color: rgb(0, 0, 0, 0.8);
    }
    .container:focus {
      outline-offset: 4px;
      outline: 2px solid rgb(30 41 59 / 50%);
    }
  </style>
</a>
