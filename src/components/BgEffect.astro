---

---

<div class="blobs">
  <div class="blobs__glass"></div>
  <div class="blobs__items">
    <div class="blob blob--white"></div>
    <div class="blob blob--white"></div>
    <div class="blob blob--emerald"></div>
    <div class="blob blob--emerald"></div>
    <div class="blob blob--lime"></div>
    <div class="blob blob--lime"></div>
    <div class="blob blob--blue"></div>
  </div>
</div>

<style>
  .blobs__glass {
    position: fixed;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    backdrop-filter: blur(150px);
    -webkit-backdrop-filter: blur(150px);
    z-index: 3;
  }
  .blobs {
    position: fixed;
    left: 0;
    top: 0;
    width: 100%;
    height: 100dvh;
    z-index: -1;
  }
  .blob__items {
    z-index: 1;
  }
  .blob {
    width: 32vw;
    aspect-ratio: 1;
    position: fixed;
    top: 0;
    top: 0;
    border-radius: 50%;
    z-index: 1;
  }
  .blob--white {
    background-color: white;
    z-index: 2;
    width: 15vw;
  }
  @media (max-width: 640px) {
    .blob {
      width: 80vw;
    }
    .blob--white {
      width: 40vw;
    }
  }
  .blob--emerald {
    background-color: #caf7df;
  }
  .blob--lime {
    background-color: #eef8d9;
  }
  .blob--green {
    background-color: #d8fce5;
  }
  .blob--yellow {
    background-color: #facc15;
  }
  .blob--blue {
    background-color: #e0ebfa;
  }
  @media (prefers-color-scheme: dark) {
    .blob--white {
      background-color: black;
    }
    .blob{
      opacity: 0.02;
    }
  }
</style>

<script>
  //   function random(min, max) {
  //     return Math.random() * (max - min) + min;
  //   }
  //   const minVelocity = 0.1;
  //   const maxVelocity = 0.2;
  //   class Blob {
  //     constructor(element) {
  //       this.element = element;
  //       this.size = element.getBoundingClientRect().width;
  //       this.x = random(0, window.innerWidth - this.size);
  //       this.y = random(0, window.innerHeight - this.size);
  //       this.vx = random(minVelocity, maxVelocity) * Math.random() > 0.5 ? -1 : 1;
  //       this.vy = random(minVelocity, maxVelocity) * Math.random() > 0.5 ? -1 : 1;
  //     }
  //     update() {
  //       this.x += this.vx;
  //       this.y += this.vy;

  //       if (this.x >= window.innerWidth - this.size) {
  //         this.vx *= -1;
  //         this.x = window.innerWidth - this.size;
  //       }
  //       if (this.y >= window.innerHeight - this.size) {
  //         this.vy *= -1;
  //         this.y = window.innerHeight - this.size;
  //       }
  //       if (this.x <= 0) {
  //         this.vx *= -1;
  //         this.x = 0;
  //       }
  //       if (this.y <= 0) {
  //         this.vy *= -1;
  //         this.y = 0;
  //       }
  //     }
  //     move() {
  //       this.element.style.transform = `translate(${this.x}px, ${this.y}px)`;
  //     }
  //   }
  //   function initBlobs() {
  //     const blobEls = document.querySelectorAll(".blob");
  //     const blobs = Array.from(blobEls).map((el) => new Blob(el));
  //     function update() {
  //       blobs.forEach((blob) => {
  //         blob.update();
  //         blob.move();
  //       });
  //       requestAnimationFrame(update);
  //     }
  //     requestAnimationFrame(update);
  //   }
  //   initBlobs();
  const MIN_SPEED = 1.5;
  const MAX_SPEED = 2.5;

  function randomNumber(min, max) {
    return Math.random() * (max - min) + min;
  }

  class Blob {
    constructor(el) {
      this.el = el;
      const boundingRect = this.el.getBoundingClientRect();
      this.size = boundingRect.width;
      this.initialX = randomNumber(0, window.innerWidth - this.size);
      this.initialY = randomNumber(0, window.innerHeight - this.size);
      this.el.style.top = `${this.initialY}px`;
      this.el.style.left = `${this.initialX}px`;
      this.vx =
        randomNumber(MIN_SPEED, MAX_SPEED) * (Math.random() > 0.5 ? 1 : -1);
      this.vy =
        randomNumber(MIN_SPEED, MAX_SPEED) * (Math.random() > 0.5 ? 1 : -1);
      this.x = this.initialX;
      this.y = this.initialY;
    }

    update() {
      this.x += this.vx;
      this.y += this.vy;
      if (this.x >= window.innerWidth - this.size) {
        this.x = window.innerWidth - this.size;
        this.vx *= -1;
      }
      if (this.y >= window.innerHeight - this.size) {
        this.y = window.innerHeight - this.size;
        this.vy *= -1;
      }
      if (this.x <= 0) {
        this.x = 0;
        this.vx *= -1;
      }
      if (this.y <= 0) {
        this.y = 0;
        this.vy *= -1;
      }
    }

    move() {
      this.el.style.transform = `translate(${this.x - this.initialX}px, ${
        this.y - this.initialY
      }px)`;
    }
  }

  function initBlobs() {
    const blobEls = document.querySelectorAll(".blob");
    const blobs = Array.from(blobEls).map((blobEl) => new Blob(blobEl));

    function update() {
      requestAnimationFrame(update);
      blobs.forEach((blob) => {
        blob.update();
        blob.move();
      });
    }

    requestAnimationFrame(update);
  }

  initBlobs();
</script>
